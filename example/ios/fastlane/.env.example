# For available environment variables run `fastlane action x` where x - your desired action that you'd like to work on.
# Take into account that .env format doesn't support dictionaries.
# For .env rules see https://github.com/motdotla/dotenv#rules

# Gym
# Path to the workspace file
GYM_WORKSPACE=GYM_WORKSPACE
# Path to the project file
XC_PROJECT=XC_PROJECT
# The project's scheme. Make sure it's marked as `Shared`.
GYM_SCHEME=XCODE_SHEME
# The configuration to use when building the app. Defaults to 'Release'.
GYM_CONFIGURATION=Release
# Method used to export the archive. Valid values are: app-store, ad-hoc, package, enterprise, development, developer-id
GYM_EXPORT_METHOD=app-store
# Should the ipa file include bitcode?. Typically this should be true for the app store build.
GYM_INCLUDE_BITCODE=false
# For non-App Store exports, should Xcode re-compile the app from bitcode? 
# Omitting recompilation significantly speed things up, however produces different binary.
# IMPORTANT: Setting it to true will cause Firebase to fail to symbolicate your crashlogs
GYM_EXPORT_COMPILE_BITCODE=false

# iCloud Container Environment used during export. Default to nothing. Available values are `Development` and `Production`. 
# See https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_icloud-container-environment
# Don't forget to set correct values for the rest of your environments.
# GYM_EXPORT_ICLOUD_CONTAINER_ENV=

# The directory in which the archive, ipa, build products should be stored in.
CI_OUTPUT_DIRECTORY=./build
# The directory for the DerivedData.
CI_DERIVED_DATA_PATH=./build/DerivedData

# GIT
# Tag to be used during build
# FL_GIT_TAG_TAG=development
# Build Number Increment. See `fastlane action (get_version_number|increment_build_number_in_plist)`. 
# Set this to some meaninful value in case there are more than 2 targets in your .xcodeproj

# Build Number Increment. See `fastlane action (get_version_number|increment_build_number_in_plist)`. 
# Set this to some meaninful value in case there are more than 2 targets in your .xcodeproj
FL_VERSION_NUMBER_TARGET=VERSION-TARGET
FL_BUILD_NUMBER_SKIP_INFO_PLIST=true

BUILD_NUMBER_XCCONFIG_PATH=xcconfig/Shared/Base.xcconfig

# Match environment variables
# This environment variable defines which certificate type should be used for the signing. Typically you want to go with `ad-hoc` for all builds 
# and `appstore` for the appstore environment.
# For the full list of the available Enviroment variables run `fastlane action match`.
# You also may want to use separate Appfile and Matchfile. See https://docs.fastlane.tools/advanced/Appfile/#appfile.
# IMPORTANT: MAKE SURE YOU'VE SET YOUR MATCH_TYPE IN THE .env.development and other files to some value.
# Define the profile type, can be appstore, development, adhoc, development, enterprise
# MATCH_TYPE=appstore

# The bundle identifier(s) of your app (comma-separated). For example: ...=com.bundle.id,com.bundle.id.client,com.bundle.id.server
MATCH_APP_IDENTIFIER=APP_ID
# URL to the git repo containing all the certificates
MATCH_GIT_URL=GIT_URL
# Your Apple ID Username
# MATCH_USERNAME=sergey.prikhodko.95@gmail.com
# The ID of your Developer Portal team if you're in multiple teams. (i.e. AXTA9N39Q1)
FASTLANE_TEAM_ID=TEAM_ID
# Devices Registration 
DELIVER_USER=${MATCH_USERNAME}

# scan (alias for run_tests)
# You can either set all variables via .env or go with a separate Scanfile. 
# See https://docs.fastlane.tools/actions/scan/ and https://docs.fastlane.tools/actions/scan/#scanfile for more info.
# For the full list of the available Environment variables run `fastlane action scan`
# The project's scheme. Make sure it's marked as `Shared`. Default value equal to your build scheme.
SCAN_SCHEME=${GYM_SCHEME}

# dSYMs. 
# For the full list of the available Enviroment variables run `fastlane action download_dsyms` and `fastlane action upload_symbols_to_crashlytics`
DOWNLOAD_DSYMS_OUTPUT_DIRECTORY=./.dSYMs
FL_UPLOAD_SYMBOLS_TO_CRASHLYTICS_DSYM_WORKER_THREADS=2

# Firebase
# The groups used for distribution, separated by commas
# FIREBASEAPPDISTRO_GROUPS=
# The groups used for distribution, separated by commas
# FIREBASEAPPDISTRO_GROUPS_FILE=
# Pass email addresses of testers, separated by commas
# FIREBASEAPPDISTRO_TESTERS=
# Pass email addresses of testers, separated by commas
# FIREBASEAPPDISTRO_TESTERS_FILE=

# Firebase Setup
# Local directory that will be used locally to find Google Application Credentials. Default to "google-application-credentials". Expected name for the Key would be the Project ID from the Firebase Console (i.e. myproject-23gr5.json)
# GOOGLE_APPLICATION_CREDENTIALS_DIR=

# In case you have multiple GoogleService-Info.plist then please set a correct value per .env file and 
# invoke `upload_symbols` with a propert `--env ...`
# GOOGLE_SERVICES_INFO_PLIST_PATH=

# SLACK
# Webhook for the Slack notifications
DISTRIBUTION_SLACK_URL=SLACK_URL

# Shortname for the environment slug. This value is used during rendering of the icon as well as during 
# adding a tag to the build during deploy. By default it matches `dev/stag/prod` from the environment. 
# Keeping slug that short makes it feel nice on the environment badge on the icon as well as keep it short in the git.
# qa-staging maps to qa-stag. Any other environment such as `appstore` will remain the same.
# If you need any other custom slug, please set ENV_SLUG to the desired value.
# ENV_SLUG=

# App Store Connect API Key
# Set values for each application in appropriate `.env` files
APP_STORE_CONNECT_API_KEY_ISSUER_ID=USER_ID
APP_STORE_CONNECT_API_KEY_KEY_ID=API_KEY

# Is App Store or Enterprise (inhouse) team? App Store ConnectAPI cannot not determine this on its own (yet)
APP_STORE_CONNECT_API_KEY_IN_HOUSE=false
# Specifies AppStore Connect API key shared git url storage
APP_STORE_CONNECT_API_KEY_GIT_REPO_URL=REPO_URL
APP_STORE_CONNECT_API_KEY_GIT_REPO_BRANCH=REPO_BRANCH
